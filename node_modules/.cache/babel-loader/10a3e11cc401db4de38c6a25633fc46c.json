{"ast":null,"code":"var _jsxFileName = \"/Users/michael/Desktop/sovereign-page/soveriegn-home/src/GridGame.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport \"./GridGame.css\";\nimport { DndContext, useDraggable, DragOverlay } from '@dnd-kit/core';\nimport { Draggable } from './Draggable';\nimport { Droppable_Green } from './Droppable_green';\nimport { Droppable_white } from './Droppable_white';\nimport { Draggable2 } from './Draggable2';\nimport './DraggableProperties';\nimport { isValid } from './isValid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar isTurnRed = true;\nvar isTurnBlack = false;\n\nfunction buildGrid() {\n  var grid = [];\n  var element = 1;\n\n  for (let y = 1; y < 9; y++) {\n    grid[y] = [];\n\n    for (let x = 1; x < 9; x++) {\n      grid[y][x] = String(element);\n      element++;\n    }\n  }\n\n  return grid;\n}\n\nfunction DraggableItem({\n  handle,\n  identifier\n}) {\n  _s();\n\n  const {\n    isDragging,\n    setNodeRef,\n    listeners\n  } = useDraggable({\n    id: String(identifier)\n  });\n  return /*#__PURE__*/_jsxDEV(Draggable, {\n    dragging: isDragging,\n    ref: setNodeRef,\n    handle: handle,\n    listeners: listeners,\n    style: {\n      opacity: isDragging ? 0 : undefined\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n}\n\n_s(DraggableItem, \"nITU3/IULBhQ//L5WdiI3X+UXno=\", false, function () {\n  return [useDraggable];\n});\n\n_c = DraggableItem;\n\nfunction DraggableItem2({\n  handle,\n  identifier\n}) {\n  _s2();\n\n  const {\n    isDragging,\n    setNodeRef,\n    listeners\n  } = useDraggable({\n    id: String(identifier)\n  });\n  return /*#__PURE__*/_jsxDEV(Draggable2, {\n    dragging: isDragging,\n    ref: setNodeRef,\n    handle: handle,\n    listeners: listeners,\n    style: {\n      opacity: isDragging ? 0 : undefined\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(DraggableItem2, \"nITU3/IULBhQ//L5WdiI3X+UXno=\", false, function () {\n  return [useDraggable];\n});\n\n_c2 = DraggableItem2;\nexport function GridGame({\n  modifiers\n}) {\n  _s3();\n\n  var test;\n  const grid = buildGrid();\n  const [parents, setParent] = useState(Array(12).fill(null));\n  const [parent2, setParent2] = useState(Array(12).fill(null));\n  const [isDragging, setIsDragging] = useState(Array(12).fill(false));\n  const [isDragging2, setIsDragging2] = useState(Array(12).fill(false));\n  const [isKing, setIsKing] = useState(Array(12).fill(false));\n  const [isKing2, setIsKing2] = useState(Array(12).fill(false));\n  const draggableCheckersR = [];\n\n  for (var i = 0; i < 12; i++) {\n    const draggable = /*#__PURE__*/_jsxDEV(DraggableItem, {\n      identifier: 'draggable-itemR' + draggableCheckersR.length\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 25\n    }, this);\n\n    draggableCheckersR.push(draggable);\n  }\n\n  const draggableCheckersB = [];\n\n  for (var i = 0; i < 12; i++) {\n    const draggable = /*#__PURE__*/_jsxDEV(DraggableItem2, {\n      identifier: 'draggable-itemB' + draggableCheckersB.length\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 25\n    }, this);\n\n    draggableCheckersB.push(draggable);\n  }\n\n  var counterR = -1;\n  var counterG = -1;\n  const gridSquares = grid.map(row => {\n    const rowSquares = row.map(tile => {\n      var rowIndex = grid.indexOf(row);\n\n      if (Number(tile) % 2 == 0 && rowIndex % 2 == 0 || Number(tile) % 2 != 0 && rowIndex % 2 != 0) {\n        if (tile < 24) {\n          counterR++;\n        }\n\n        if (tile > 40) {\n          counterG++;\n        }\n\n        if (parents[counterR] === null && tile < 24) {\n          parents[counterR] = tile;\n        }\n\n        if (parent2[counterG] === null && tile > 40) {\n          parent2[counterG] = tile;\n        }\n\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Droppable_white, {\n            id: tile,\n            children: [parents[counterR] === null && tile < 24 ? draggableCheckersR[counterR] : null, parent2[counterG] === null && tile > 40 ? draggableCheckersB[counterG] : null, parent2.indexOf(tile) > -1 ? draggableCheckersB[parent2.indexOf(tile)] : '', parents.indexOf(tile) > -1 ? draggableCheckersR[parents.indexOf(tile)] : '']\n          }, tile, true, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 17\n        }, this);\n      } else {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Droppable_Green, {\n            id: tile\n          }, tile, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 20\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 17\n        }, this);\n      }\n    });\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\" \", rowSquares, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 17\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(DndContext, {\n      modifiers: parents.every(element => element === null) ? undefined : parent2.every(element => element === null) ? undefined : modifiers,\n      onDragStart: handleDragStart,\n      onDragEnd: handleDragEnd,\n      onDragCancel: handleDragCancel,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid\",\n        children: gridSquares\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(DragOverlay, {\n        children: [isDragging2.includes(true) ? /*#__PURE__*/_jsxDEV(Draggable2, {\n          dragging: true,\n          dragOverlay: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 49\n        }, this) : null, isDragging.includes(true) ? /*#__PURE__*/_jsxDEV(Draggable, {\n          dragging: true,\n          dragOverlay: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 49\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 163,\n    columnNumber: 7\n  }, this);\n\n  function handleDragStart({\n    active\n  }) {\n    if (active.id.includes(\"draggable-itemR\") && isTurnRed) {\n      let newArray = [...isDragging];\n      let index = active.id;\n      var getIndex = Number(index.match(/\\d+$/));\n      newArray[getIndex] = true;\n      setIsDragging(newArray);\n      isTurnRed = false;\n      isTurnBlack = true;\n    } else if (active.id.includes(\"draggable-itemB\") && isTurnBlack) {\n      let newArray = [...isDragging2];\n      let index = active.id;\n      var getIndex = Number(index.match(/\\d+$/));\n      newArray[getIndex] = true;\n      setIsDragging2(newArray);\n      isTurnRed = true;\n      isTurnBlack = false;\n    }\n  }\n\n  function handleDragEnd(over) {\n    for (var i = 0; i < isDragging.length; i++) {\n      if (isDragging[i] == true) {\n        var _over$over;\n\n        let result = isValid(Number((_over$over = over.over) === null || _over$over === void 0 ? void 0 : _over$over.id), Number(parents[i]), \"red\", parents, parent2, isKing[i]);\n\n        if (result != undefined) {\n          var _over$over2, _over$over3;\n\n          let newArrayParent = [...parents];\n          let newArrayDragging = [...isDragging];\n\n          if (Array.isArray(result)) {\n            let result2 = [...result];\n            let newArrayParent2 = [...parent2];\n            newArrayParent2 = newArrayParent2.filter(function (val) {\n              return result2.indexOf(Number(val)) < 0;\n            });\n            setParent2(newArrayParent2);\n          }\n\n          if (Number((_over$over2 = over.over) === null || _over$over2 === void 0 ? void 0 : _over$over2.id) > 56) {\n            let newIsKing = [...isKing];\n            newIsKing[i] = true;\n            setIsKing(newIsKing);\n          }\n\n          newArrayParent[i] = over ? (_over$over3 = over.over) === null || _over$over3 === void 0 ? void 0 : _over$over3.id : null;\n          setParent(newArrayParent);\n          newArrayDragging[i] = false;\n          setIsDragging(newArrayDragging);\n          break;\n        } else {\n          let newArrayDragging = [...isDragging];\n          newArrayDragging[i] = false;\n          setIsDragging(newArrayDragging);\n          isTurnRed = true;\n          isTurnBlack = false;\n        }\n      }\n    }\n\n    for (var i = 0; i < isDragging2.length; i++) {\n      if (isDragging2[i] == true) {\n        var _over$over4;\n\n        let result = isValid(Number((_over$over4 = over.over) === null || _over$over4 === void 0 ? void 0 : _over$over4.id), Number(parent2[i]), \"black\", parents, parent2, isKing2[i]);\n\n        if (result != undefined) {\n          var _over$over5, _over$over6;\n\n          let newArrayParent = [...parent2];\n          let newArrayDragging = [...isDragging2];\n\n          if (Array.isArray(result)) {\n            let result2 = [...result];\n            let newArrayParent2 = [...parents];\n            newArrayParent2 = newArrayParent2.filter(function (val) {\n              return result2.indexOf(Number(val)) < 0;\n            });\n            setParent(newArrayParent2);\n          }\n\n          if (Number((_over$over5 = over.over) === null || _over$over5 === void 0 ? void 0 : _over$over5.id) <= 8) {\n            let newIsKing = [...isKing2];\n            newIsKing[i] = true;\n            setIsKing2(newIsKing);\n          }\n\n          newArrayParent[i] = over ? (_over$over6 = over.over) === null || _over$over6 === void 0 ? void 0 : _over$over6.id : null;\n          setParent2(newArrayParent);\n          newArrayDragging[i] = false;\n          setIsDragging2(newArrayDragging);\n          break;\n        } else {\n          let newArrayDragging = [...isDragging2];\n          newArrayDragging[i] = false;\n          setIsDragging2(newArrayDragging);\n          isTurnRed = false;\n          isTurnBlack = true;\n        }\n      }\n    }\n\n    if (parents.join(\"\") === \"\" || parent2.join(\"\") === \"\") {\n      window.location.reload();\n    }\n  }\n\n  function handleDragCancel(event) {\n    if (event.active.id.includes(\"draggable-itemR\")) {\n      let newArray = [...isDragging];\n      let index = event.active.id;\n      var getIndex = Number(index.match(/\\d+$/));\n      newArray[getIndex] = false;\n      setIsDragging(newArray);\n      isTurnRed = true;\n      isTurnBlack = false;\n    } else {\n      let newArray = [...isDragging2];\n      let index = event.active.id;\n      var getIndex = Number(index.match(/\\d+$/));\n      newArray[getIndex] = false;\n      setIsDragging2(newArray);\n      isTurnRed = false;\n      isTurnBlack = true;\n    }\n  }\n}\n\n_s3(GridGame, \"gR2ro+q44qUMgD2z1faBYR/XMUU=\");\n\n_c3 = GridGame;\nexport default GridGame; //<Tile />  \n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"DraggableItem\");\n$RefreshReg$(_c2, \"DraggableItem2\");\n$RefreshReg$(_c3, \"GridGame\");","map":{"version":3,"sources":["/Users/michael/Desktop/sovereign-page/soveriegn-home/src/GridGame.tsx"],"names":["React","useState","DndContext","useDraggable","DragOverlay","Draggable","Droppable_Green","Droppable_white","Draggable2","isValid","isTurnRed","isTurnBlack","buildGrid","grid","element","y","x","String","DraggableItem","handle","identifier","isDragging","setNodeRef","listeners","id","opacity","undefined","DraggableItem2","GridGame","modifiers","test","parents","setParent","Array","fill","parent2","setParent2","setIsDragging","isDragging2","setIsDragging2","isKing","setIsKing","isKing2","setIsKing2","draggableCheckersR","i","draggable","length","push","draggableCheckersB","counterR","counterG","gridSquares","map","row","rowSquares","tile","rowIndex","indexOf","Number","every","handleDragStart","handleDragEnd","handleDragCancel","includes","active","newArray","index","getIndex","match","over","result","newArrayParent","newArrayDragging","isArray","result2","newArrayParent2","filter","val","newIsKing","join","window","location","reload","event"],"mappings":"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","sourcesContent":["import React, { PropsWithoutRef, useState } from 'react';\nimport \"./GridGame.css\";\nimport {\n  DndContext, \n  useDraggable, \n  DragEndEvent, \n  CollisionDetection as CollisionDetectionType, \n  Modifiers, \n  UniqueIdentifier,\n  DragOverlay,\n  DragStartEvent,\n  DragCancelEvent,\n} from '@dnd-kit/core';\nimport {Draggable} from './Draggable';\nimport {Droppable_Green} from './Droppable_green';\nimport {Droppable_white} from './Droppable_white';\nimport {Draggable2} from './Draggable2';\nimport {} from './DraggableProperties';\nimport { timeline } from 'console';\nimport {isValid} from './isValid';\ninterface Props {\n  modifiers?: Modifiers;\n  grid?: string[][];\n}\n\nvar isTurnRed = true;\nvar isTurnBlack = false;\n\nfunction buildGrid() {\n  var grid: string[][] = [];\n  var element = 1;\n  for (let y = 1; y < 9; y++) {\n    grid[y] = [];\n    for (let x = 1; x < 9; x++) {\n      grid[y][x] = String(element);\n      element++;\n    }\n  }\n\n  return grid;\n}\n\n\ninterface DraggableProps {\n  handle?: boolean;\n  identifier? : String\n}\n\n\n\nfunction DraggableItem({handle, identifier}: DraggableProps) {\n  const {isDragging, setNodeRef, listeners} = useDraggable({\n    id: String(identifier),\n  });\n  \n   return (\n    <Draggable\n      dragging={isDragging}\n      ref={setNodeRef}\n      handle={handle}\n      listeners={listeners}\n      style={{\n        opacity: isDragging ? 0 : undefined,\n      }}\n\n    />\n  );\n}\n\n\nfunction DraggableItem2({handle, identifier}: DraggableProps) {\n  const {isDragging, setNodeRef, listeners} = useDraggable({\n    id: String(identifier),\n  });\n   return (\n    <Draggable2\n      dragging={isDragging}\n      ref={setNodeRef}\n      handle={handle}\n      listeners={listeners}\n      style={{\n        opacity: isDragging ? 0 : undefined,\n      }}\n      \n    />\n  );\n}\n\nexport function GridGame({modifiers,}: Props) {\n  var test : any;\n    const grid = buildGrid();\n    const [parents, setParent] = useState<UniqueIdentifier[]>(Array(12).fill(null));\n    const [parent2, setParent2] = useState<UniqueIdentifier[]>(Array(12).fill(null));\n    const [isDragging, setIsDragging] = useState<boolean[]>(Array(12).fill(false));\n    const [isDragging2, setIsDragging2] = useState<boolean[]>(Array(12).fill(false));\n    const [isKing, setIsKing] = useState<boolean[]>(Array(12).fill(false))\n    const [isKing2, setIsKing2] = useState<boolean[]>(Array(12).fill(false))\n\n    const draggableCheckersR : any[] = [];\n  \n    for (var i = 0; i < 12; i++) {\n      const draggable = <DraggableItem identifier = {'draggable-itemR'+(draggableCheckersR.length)}/>;\n      draggableCheckersR.push(draggable);\n    }\n\n    const draggableCheckersB : any[] = [];\n  \n    for (var i = 0; i < 12; i++) {\n      const draggable = <DraggableItem2 identifier = {'draggable-itemB'+(draggableCheckersB.length)}/>;\n      draggableCheckersB.push(draggable);\n    }\n\n    var counterR = -1;\n    var counterG = -1;\n\n    const gridSquares = grid.map((row: any[]) => {\n          const rowSquares = row.map((tile:any) => {\n            var rowIndex = grid.indexOf(row);\n           \n            if (((Number(tile)%2 == 0 && rowIndex%2 ==0) || (Number(tile)%2 != 0 && rowIndex%2 !=0))) {\n              \n              if (tile < 24){\n                counterR++;\n              }\n\n              if (tile > 40){\n                counterG++;\n              }\n\n              if (parents[counterR] === null && tile < 24){\n                parents[counterR] = tile;\n              }\n\n              if (parent2[counterG] === null && tile > 40){\n                parent2[counterG] = tile;\n              }\n\n              return (    \n                <div>\n                  <Droppable_white key={tile} id={tile}>\n                    {parents[counterR] === null && tile < 24? draggableCheckersR[counterR]: null}\n                    {parent2[counterG] === null && tile > 40? draggableCheckersB[counterG]: null}\n                    {parent2.indexOf(tile) > -1 ? draggableCheckersB[parent2.indexOf(tile)]: ''}\n                    {parents.indexOf(tile) > -1 ? draggableCheckersR[parents.indexOf(tile)]: ''}\n                  </Droppable_white> \n                </div>  \n              ); \n            } else {\n              return (      \n                <div>\n                   <Droppable_Green key={tile} id={tile}>\n\n                  </Droppable_Green> \n                </div> \n              ); \n            }\n           });\n\n        return (<div> {rowSquares} </div>);\n          });\n\n    return (\n      <div>\n      <DndContext \n        modifiers = {\n          parents.every((element: String | null) => element === null) ? undefined: parent2.every((element: String | null) => element === null) ? undefined: modifiers\n        }\n        onDragStart={handleDragStart}\n        onDragEnd={handleDragEnd}\n        onDragCancel={handleDragCancel}\n        > \n          <div className = \"grid\">\n            \n            {gridSquares}\n          \n            </div>\n              <DragOverlay>\n                  {isDragging2.includes(true) ? <Draggable2 dragging dragOverlay /> : null}\n                  {isDragging.includes(true) ?  <Draggable dragging dragOverlay /> : null}\n              </DragOverlay>\n        </DndContext> \n        </div>\n    );\n\n    function handleDragStart({ active}: DragStartEvent  ) {\n          if (active.id.includes(\"draggable-itemR\") && isTurnRed){\n            let newArray = [...isDragging];\n            let index = active.id\n            var getIndex = Number(index.match(/\\d+$/));\n            newArray[getIndex] = true;\n            setIsDragging(newArray);\n            isTurnRed = false;\n            isTurnBlack = true;\n          } else if (active.id.includes(\"draggable-itemB\") && isTurnBlack) {\n            let newArray = [...isDragging2];\n            let index = active.id\n            var getIndex = Number(index.match(/\\d+$/));\n            newArray[getIndex] = true;\n            setIsDragging2(newArray);\n            isTurnRed = true;\n            isTurnBlack = false;\n          }\n    }\n    function handleDragEnd(over: DragEndEvent) {\n      for (var i = 0; i < isDragging.length; i++) {\n        if (isDragging[i] == true) {\n          let result = isValid(Number(over.over?.id), Number(parents[i]), \"red\", parents, parent2, isKing[i]);\n          if (result != undefined){\n            let newArrayParent = [...parents];\n            let newArrayDragging = [...isDragging];\n            \n            if (Array.isArray(result)) {\n              let result2 = [...result]\n              let newArrayParent2 = [...parent2];\n              newArrayParent2 = newArrayParent2.filter(function(val) {\n                return result2.indexOf(Number(val)) < 0; \n              });\n              setParent2(newArrayParent2);\n            }\n\n            if (Number(over.over?.id) > 56) {\n              let newIsKing = [...isKing];\n              newIsKing[i] = true;\n              setIsKing(newIsKing);\n            }\n\n            newArrayParent[i] = (over ? over.over?.id : null as any);\n            setParent(newArrayParent);\n            \n            newArrayDragging[i] = false;\n            setIsDragging(newArrayDragging);\n            break;\n          } else {\n            let newArrayDragging = [...isDragging];\n            newArrayDragging[i] = false;\n            setIsDragging(newArrayDragging);\n            isTurnRed = true;\n            isTurnBlack = false;\n          }\n        } \n      }\n\n      for (var i = 0; i < isDragging2.length; i++) {\n        if (isDragging2[i] == true) {\n          let result = isValid(Number(over.over?.id), Number(parent2[i]), \"black\", parents, parent2, isKing2[i])\n          if (result != undefined) {\n            let newArrayParent = [...parent2];\n            let newArrayDragging = [...isDragging2];\n                        \n            if (Array.isArray(result)) {\n              let result2 = [...result]\n              let newArrayParent2 = [...parents];\n              newArrayParent2 = newArrayParent2.filter(function(val) {\n                return result2.indexOf(Number(val)) < 0; \n              });\n              setParent(newArrayParent2);\n            }\n            if (Number(over.over?.id) <= 8) {\n              let newIsKing = [...isKing2];\n              newIsKing[i] = true;\n              setIsKing2(newIsKing);\n            }\n\n            newArrayParent[i] = (over ? over.over?.id : null as any);\n            setParent2(newArrayParent);\n            \n            newArrayDragging[i] = false;\n            setIsDragging2(newArrayDragging);\n            break;\n          } else {\n            let newArrayDragging = [...isDragging2];\n            newArrayDragging[i] = false;\n            setIsDragging2(newArrayDragging);\n            isTurnRed = false;\n            isTurnBlack = true;\n          }\n        }\n      }\n      if (parents.join(\"\") === \"\" || parent2.join(\"\") === \"\") {\n        window.location.reload();\n      }\n    }\n\n    function handleDragCancel(event : DragCancelEvent) {\n      if (event.active.id.includes(\"draggable-itemR\")){\n        let newArray = [...isDragging];\n        let index = event.active.id\n        var getIndex = Number(index.match(/\\d+$/));\n        newArray[getIndex] = false;\n        setIsDragging(newArray);\n        isTurnRed = true;\n        isTurnBlack = false;\n      } else {\n        let newArray = [...isDragging2];\n        let index = event.active.id\n        var getIndex = Number(index.match(/\\d+$/));\n        newArray[getIndex] = false;\n        setIsDragging2(newArray);\n        isTurnRed = false;\n        isTurnBlack = true;\n      }\n    }\n    \n}\n\n\nexport default GridGame;\n//<Tile />  "]},"metadata":{},"sourceType":"module"}